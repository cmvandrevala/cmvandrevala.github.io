[
  
  {
    "title": "Student Class",
    "url": "/posts/student-class/",
    "categories": "Computer Science, In-Class Activities",
    "tags": "c++, classes, constructors, csc-121, csc-122",
    "date": "2024-12-10 11:00:00 -0600",
    





    
    "snippet": "🔖 Background InformationThere is no Background Information for this lab.🎯 Problem StatementCreate a class that capture the idea of a “student”. It should have the properties listed in the Acceptanc...",
    "content": "🔖 Background InformationThere is no Background Information for this lab.🎯 Problem StatementCreate a class that capture the idea of a “student”. It should have the properties listed in the Acceptance Criteria. Be sure to verify that your class works by exercising it in a driver program.✅ Acceptance Criteria  A student should have a first name and last name.          Each of these properties can be read and changed.      Pass in arguments in the constructor of the class to set these properties.        A student should have a student ID.          The ID can be read, but not changed.      Randomly generate a student ID in the constructor of the class.        A student should have a number of credits property which keeps track of the number of credits they are taking in a semester.          The number of credits can be read, but not changed directly.      The number of credits should default to zero when a student object is created.      The student class should have a method with the signature void add_credits(int number) that increments the number of credits that a student is signed up for in the semester.      The student class should have a method with the signature void reset_credits() that resets the number of credits that the student is signed up for back to zero.      📋 Dev NotesN/A🖥️ Example OutputYou should write a driver program to thoroughly test out your student class. A driver program might include some of the following lines:#include &lt;cassert&gt;class Student {  // Your code goes here!}int main() {  Student student = Student(\"Bob\", \"Bobberson\");  assert(student.first_name == \"Bob\");  assert(student.number_of_credits == 0);  student.add_credits(6);  student.add_credits(2);  assert(student.number_of_credits == 8);  student.reset_credits();  assert(student.number_of_credits == 0);  return 0;}📘 Works CitedThere are no works cited for this activity."
  },
  
  {
    "title": "Hello World!",
    "url": "/posts/hello-world/",
    "categories": "Computer Science, Labs",
    "tags": "c++, java, csc-121, csc-122, csc-214",
    "date": "2024-12-10 10:00:00 -0600",
    





    
    "snippet": "🔖 Background InformationThis lab is a simple way to make sure that your local setup is working properly. It sets the stage to make sure that you can develop on your workstation.🎯 Problem StatementW...",
    "content": "🔖 Background InformationThis lab is a simple way to make sure that your local setup is working properly. It sets the stage to make sure that you can develop on your workstation.🎯 Problem StatementWrite a program that prints “Hello World!” to the terminal and then exits gracefully.✅ Acceptance Criteria  The program should be written in the main language used by the class (e.g. C++, Java, Python, etc.).  The program should print “Hello World!” to the terminal and then exit gracefully.  No user input is needed for this problem.📋 Dev NotesThe goal of this assignment is to make sure that your workstation is set up properly, and you are ready to write code. Some things that you might want to consider as you work through this include:  Do you have a working compiler or interpreter installed on your computer?  Are you using a recent version of the language?  Is your text editor set up properly?  Are there any packages or plugins that you like to use to aid you in development?  Are there any static analysis tools that you like to use?  Are there any useful sites or documentation that you want to have bookmarked?  Is there a build tool that you might need to set up?  Is there a testing framework that you might need to set up?🖥️ Example OutputThe goal of this program is to print “Hello World” out to the screen. This will look different depending on the language that we are using in the class. For example, you might run your program in C++ as follows:$ ./hello.outHello World!Whereas in Java, you might utilize a build tool like Gradle:$ gradle runHello World!📝 Thought Provoking QuestionsThere are no thought provoking questions for this lab.💼 Add-Ons For the PortfolioThere are no add-ons available for this lab.🔗 Useful Links  C++ Project Template  Java Project Template📘 Works CitedThere are no works cited for this lab."
  }
  
]

